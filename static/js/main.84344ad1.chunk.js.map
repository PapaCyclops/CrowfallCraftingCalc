{"version":3,"sources":["ColorModeSwitcher.tsx","resources/resources.ts","CraftingCalculator/utils/craftingUtils.ts","CraftingCalculator/components/CraftingRequirements.tsx","CraftingCalculator/components/ResourceRow.tsx","CraftingCalculator/components/ResourceTable.tsx","CraftingCalculator/CraftingCalculator.tsx","theme.ts","App.tsx","reportWebVitals.ts","serviceWorker.ts","index.tsx"],"names":["ColorModeSwitcher","props","toggleColorMode","useColorMode","text","useColorModeValue","SwitchIcon","FaMoon","FaSun","size","fontSize","variant","color","marginLeft","onClick","icon","aria-label","resources","createResource","group","name","ingredients","resource","Map","push","base","wood","stone","ore","hide","gold","etherealDust","cuttingGrit","chaosEmber","powderedStone","waterFlask","geomancyComponent","mulch","oreConcentrate","gravel","soil","stonemasonryComponent","brick","carpentryNail","floorTiles","qualityAssuranceControlKit","woodShingles","woodStakes","architecturalComponents","frame","architecturalArches","wallInsulation","architecturalWall","foundationSegment","roofSegment","attatchable","buildings","cottage","villa","throneLodge","craftingStations","geomancy","grasslandParcel","woodlandGroveParcel","homesteadParcel","woodlandHillsParcel","estateParcel","hamletParcel","shireParcel","villageParcel","townParcel","fiefParcel","cityParcel","capitalParcel","vendorStalls","getCraftingSteps","amount","map","entries","ingredient","ingredientAmount","set","get","subIngredient","subAmount","CraftingRequirements","steps","as","Array","from","sort","amountA","isNumeric","toLocaleString","ResourceNumberInput","maxW","min","paddingInlineEnd","textAlign","ResourceRow","isDisabled","ResourceTable","resourcesByGroup","reduce","Object","groupResources","colSpan","paddingY","CraftingCalculator","theme","extendTheme","config","initialColorMode","useSystemColorMode","App","minH","p","justifySelf","spacing","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","window","location","hostname","match","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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KAET3B,EAAeqC,EAAa,SAAU,CAC1D,CAACF,EAAmB,GACpB,CAACT,EAAY,GACb,CAACb,EAAc,GACf,CAACc,EAA4B,KAER3B,EAAeqC,EAAa,UAAW,CAC5D,CAACF,EAAmB,GACpB,CAACT,EAAY,GACb,CAACb,EAAc,GACf,CAACc,EAA4B,KAED3B,EAAeqC,EAAa,kBAAmB,CAC3E,CAACF,EAAmB,GACpB,CAACN,EAAY,GACb,CAAChB,EAAc,GACf,CAACc,EAA4B,KAKb,aACLY,EAAUvC,EAAesC,EAAW,UAAW,CAC1D,CAACJ,EAAmB,GACpB,CAACF,EAAqB,GACtB,CAACG,EAAmB,GACpB,CAACV,EAAe,GAChB,CAACC,EAAY,GACb,CAACU,EAAa,GACd,CAACrB,EAAY,KAEFyB,EAAQxC,EAAesC,EAAW,QAAS,CACtD,CAACC,EAAS,GACV,CAACL,EAAmB,GACpB,CAACF,EAAqB,GACtB,CAACG,EAAmB,GACpB,CAACV,EAAe,GAChB,CAACC,EAAY,GACb,CAACU,EAAa,GACd,CAACrB,EAAY,KAYF0B,GAVYzC,EAAesC,EAAW,aAAc,CAC/D,CAACE,EAAO,GACR,CAACN,EAAmB,IACpB,CAACF,EAAqB,IACtB,CAACG,EAAmB,IACpB,CAACV,EAAe,IAChB,CAACC,EAAY,IACb,CAACU,EAAa,IACd,CAACrB,EAAY,KAEYf,EAAesC,EAAW,eAAgB,CACnE,CAACE,EAAO,GACR,CAACN,EAAmB,IACpB,CAACF,EAAqB,IACtB,CAACG,EAAmB,IACpB,CAACV,EAAe,IAChB,CAACC,EAAY,IACb,CAACU,EAAa,IACd,CAACrB,EAAY,MAgCT2B,IA9Bc1C,EAAesC,EAAW,OAAQ,CACpD,CAACG,EAAa,GACd,CAACP,EAAmB,IACpB,CAACF,EAAqB,IACtB,CAACG,EAAmB,IACpB,CAACV,EAAe,IAChB,CAACC,EAAY,IACb,CAACU,EAAa,GACd,CAACrB,EAAY,MAEMf,EAAesC,EAAW,QAAS,CACtD,CAACE,EAAO,GACR,CAACN,EAAmB,IACpB,CAACF,EAAqB,IACtB,CAACG,EAAmB,IACpB,CAACV,EAAe,IAChB,CAACC,EAAY,IACb,CAACU,EAAa,IACd,CAACrB,EAAY,KAEaf,EAAesC,EAAW,gBAAiB,CACrE,CAACH,EAAmB,GACpB,CAACV,EAAe,GAChB,CAACZ,EAAc,IACf,CAACqB,EAAmB,GACpB,CAACR,EAAY,KAKU,qBAkHnBiB,IAjHgC3C,EACpC0C,GACA,2BACA,CACE,CAAChC,EAAK,IACN,CAACD,EAAO,IACR,CAACD,EAAM,IACP,CAACK,EAAc,MAGyBb,EAC1C0C,GACA,iCACA,CACE,CAAChC,EAAK,IACN,CAACD,EAAO,IACR,CAACD,EAAM,IACP,CAACK,EAAc,MAGmBb,EACpC0C,GACA,2BACA,CACE,CAAChC,EAAK,IACN,CAACD,EAAO,IACR,CAACD,EAAM,IACP,CAACK,EAAc,MAGmBb,EACpC0C,GACA,2BACA,CACE,CAAChC,EAAK,IACN,CAACD,EAAO,IACR,CAACD,EAAM,IACP,CAACK,EAAc,MAGmBb,EACpC0C,GACA,2BACA,CACE,CAAChC,EAAK,IACN,CAACD,EAAO,IACR,CAACD,EAAM,IACP,CAACK,EAAc,MAGmBb,EACpC0C,GACA,2BACA,CACE,CAAChC,EAAK,IACN,CAACD,EAAO,IACR,CAACD,EAAM,IACP,CAACK,EAAc,MAG0Bb,EAC3C0C,GACA,kCACA,CACE,CAAChC,EAAK,IACN,CAACD,EAAO,IACR,CAACD,EAAM,IACP,CAACK,EAAc,MAGsBb,EACvC0C,GACA,8BACA,CACE,CAAChC,EAAK,IACN,CAACD,EAAO,IACR,CAACD,EAAM,IACP,CAACK,EAAc,MAGsBb,EACvC0C,GACA,8BACA,CACE,CAAChC,EAAK,IACN,CAACD,EAAO,IACR,CAACD,EAAM,IACP,CAACK,EAAc,MAGwBb,EACzC0C,GACA,gCACA,CACE,CAAChC,EAAK,IACN,CAACD,EAAO,IACR,CAACD,EAAM,IACP,CAACK,EAAc,MAGuBb,EACxC0C,GACA,+BACA,CACE,CAAChC,EAAK,IACN,CAACD,EAAO,IACR,CAACD,EAAM,IACP,CAACK,EAAc,MAMF,YAC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","file":"static/js/main.84344ad1.chunk.js","sourcesContent":["import {\n  useColorMode,\n  useColorModeValue,\n  IconButton,\n  IconButtonProps\n} from \"@chakra-ui/react\";\nimport {FC} from \"react\";\nimport {FaMoon, FaSun} from \"react-icons/fa\";\n\ntype ColorModeSwitcherProps = Omit<IconButtonProps, \"aria-label\">;\n\nexport const ColorModeSwitcher: FC<ColorModeSwitcherProps> = (props) => {\n  const {toggleColorMode} = useColorMode();\n  const text = useColorModeValue(\"dark\", \"light\");\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\n\n  return (\n    <IconButton\n      size=\"md\"\n      fontSize=\"lg\"\n      variant=\"ghost\"\n      color=\"current\"\n      marginLeft=\"2\"\n      onClick={toggleColorMode}\n      icon={<SwitchIcon />}\n      aria-label={`Switch to ${text} mode`}\n      {...props}\n    />\n  );\n};\n","export interface Resource {\n  name: string;\n  group: string;\n  ingredients?: Map<Resource, number>;\n}\n\nexport const resources: Resource[] = [];\n\nfunction createResource(\n  group: string,\n  name: string,\n  ingredients?: [Resource, number][]\n): Resource {\n  const resource: Resource = {group, name};\n  if (ingredients) {\n    resource.ingredients = new Map(ingredients);\n  }\n  resources.push(resource);\n  return resource;\n}\n\n//<editor-fold desc=\"Base Resources\">\nconst base = \"Base\";\nexport const wood = createResource(base, \"Wood\");\nexport const stone = createResource(base, \"Stone\");\nexport const ore = createResource(base, \"Ore\");\nexport const hide = createResource(base, \"Hide\");\nexport const gold = createResource(base, \"Gold\");\nexport const etherealDust = createResource(base, \"Ethereal Dust\");\nexport const cuttingGrit = createResource(base, \"Cutting Grit\");\nexport const chaosEmber = createResource(base, \"Chaos Ember\");\nexport const animalBlood = createResource(base, \"Animal Blood\");\nexport const animalBone = createResource(base, \"Animal Bone\");\n//</editor-fold>\n\n//<editor-fold desc \"Alchemy Craft\">\nconst alchemyCraft = \"Alchemy Craft\";\nexport const powderedStone = createResource(alchemyCraft, \"Powdered Stone\", [\n  [stone, 8]\n]);\n//</editor-fold>\n\n//<editor-fold desc=\"Purchased\">\nexport const waterFlask = createResource(\"Purchase\", \"Water Flask\", [\n  [gold, 20 /*todo update price*/]\n]);\n//</editor-fold>\n\n//<editor-fold desc=\"Geomancy Components\">\nexport const geomancyComponent = \"Geomancy Component\";\nexport const mulch = createResource(geomancyComponent, \"Mulch\", [[wood, 20]]);\nexport const oreConcentrate = createResource(\n  geomancyComponent,\n  \"Ore Concentrate\",\n  [[ore, 20]]\n);\nexport const gravel = createResource(geomancyComponent, \"Gravel\", [\n  [stone, 20]\n]);\nexport const soil = createResource(geomancyComponent, \"Soil\", [\n  [gravel, 8],\n  [mulch, 8],\n  [oreConcentrate, 8]\n]);\n//</editor-fold>\n\n//<editor-fold desc = \"Stonemasonry Components\">\nexport const stonemasonryComponent = \"Stonemasonry Component\";\nexport const brick = createResource(stonemasonryComponent, \"Brick\", [\n  [stone, 75],\n  [etherealDust, 5]\n]);\nexport const carpentryNail = createResource(\n  stonemasonryComponent,\n  \"Carpentry Nail\",\n  [\n    [ore, 60],\n    [etherealDust, 5]\n  ]\n);\nexport const diamondCuttingBlade = createResource(\n  stonemasonryComponent,\n  \"Diamond Cutting Blade\",\n  [\n    [ore, 6],\n    [cuttingGrit, 2]\n  ]\n);\nexport const floorTiles = createResource(stonemasonryComponent, \"Floor Tiles\", [\n  [stone, 75],\n  [etherealDust, 5]\n]);\nexport const grindingWheel = createResource(\n  stonemasonryComponent,\n  \"Grinding Wheel\",\n  [[stone, 12]]\n);\nexport const polishingPaste = createResource(\n  stonemasonryComponent,\n  \"Polishing Paste\",\n  [\n    [waterFlask, 2],\n    [powderedStone, 8]\n  ]\n);\nexport const qualityAssuranceControlKit = createResource(\n  stonemasonryComponent,\n  \"Quality Assurance Control Kit\",\n  [\n    [ore, 25],\n    [wood, 25],\n    [stone, 25],\n    [hide, 25],\n    [etherealDust, 5]\n  ]\n);\nexport const woodShingles = createResource(\n  stonemasonryComponent,\n  \"Wood Shingles\",\n  [\n    [wood, 80],\n    [carpentryNail, 2]\n  ]\n);\nexport const woodStakes = createResource(stonemasonryComponent, \"Wood Stakes\", [\n  [wood, 75],\n  [etherealDust, 5]\n]);\n//</editor-fold>\n\n//<editor-fold desc \" Architecture Components\">\nconst architecturalComponents = \"Architectural Components\";\nexport const frame = createResource(architecturalComponents, \"Frame\", [\n  [wood, 80],\n  [carpentryNail, 2]\n]);\nexport const architecturalArches = createResource(\n  architecturalComponents,\n  \"Architectural Arches\",\n  [\n    [brick, 2],\n    [frame, 2],\n    [carpentryNail, 1]\n  ]\n);\nexport const wallInsulation = createResource(\n  architecturalComponents,\n  \"Wall Insulation\",\n  [\n    [hide, 10],\n    [mulch, 4]\n  ]\n);\nexport const architecturalWall = createResource(\n  architecturalComponents,\n  \"Architectural Wall\",\n  [\n    [brick, 2],\n    [frame, 4],\n    [carpentryNail, 1],\n    [wallInsulation, 2]\n  ]\n);\nexport const foundationSegment = createResource(\n  architecturalComponents,\n  \"Foundation Segment\",\n  [\n    [brick, 4],\n    [gravel, 2]\n  ]\n);\nexport const roofSegment = createResource(\n  architecturalComponents,\n  \"Roof Segment\",\n  [\n    [woodShingles, 4],\n    [carpentryNail, 4]\n  ]\n);\nexport const wallSection = createResource(\n  architecturalComponents,\n  \"Wall Section\",\n  [\n    [woodStakes, 8],\n    [frame, 2]\n  ]\n);\n//</editor-fold>\n\n//<editor-fold desc \"Attatchables\">\nconst attatchable = \"Attachables\";\nexport const buttressAndFin = createResource(attatchable, \"Buttress and Fin\", [\n  [foundationSegment, 1],\n  [floorTiles, 2],\n  [etherealDust, 5],\n  [qualityAssuranceControlKit, 1]\n]);\nexport const craftingDeck = createResource(attatchable, \"Crafting Deck\", [\n  [architecturalArches, 1],\n  [foundationSegment, 1],\n  [floorTiles, 1],\n  [etherealDust, 5],\n  [qualityAssuranceControlKit, 1]\n]);\nexport const hangingBanner = createResource(attatchable, \"Hanging Banner\", [\n  [woodStakes, 2],\n  [foundationSegment, 2],\n  [etherealDust, 5],\n  [qualityAssuranceControlKit, 1]\n]);\nexport const merlon = createResource(attatchable, \"Merlon\", [\n  [foundationSegment, 3],\n  [floorTiles, 1],\n  [etherealDust, 5],\n  [qualityAssuranceControlKit, 1]\n]);\nexport const rampart = createResource(attatchable, \"Rampart\", [\n  [foundationSegment, 4],\n  [floorTiles, 3],\n  [etherealDust, 5],\n  [qualityAssuranceControlKit, 1]\n]);\nexport const standingBanner = createResource(attatchable, \"Standing Banner\", [\n  [foundationSegment, 2],\n  [woodStakes, 2],\n  [etherealDust, 5],\n  [qualityAssuranceControlKit, 1]\n]);\n//</editor-fold>\n\n//<editor-fold desc \"Buildings\"\nconst buildings = \"Buildings\";\nexport const cottage = createResource(buildings, \"Cottage\", [\n  [architecturalWall, 8],\n  [architecturalArches, 8],\n  [foundationSegment, 8],\n  [carpentryNail, 4],\n  [floorTiles, 8],\n  [roofSegment, 8],\n  [chaosEmber, 2]\n]);\nexport const villa = createResource(buildings, \"Villa\", [\n  [cottage, 1],\n  [architecturalWall, 8],\n  [architecturalArches, 8],\n  [foundationSegment, 8],\n  [carpentryNail, 6],\n  [floorTiles, 8],\n  [roofSegment, 8],\n  [chaosEmber, 3]\n]);\nexport const guildHall = createResource(buildings, \"Guild Hall\", [\n  [villa, 1],\n  [architecturalWall, 16],\n  [architecturalArches, 16],\n  [foundationSegment, 16],\n  [carpentryNail, 12],\n  [floorTiles, 16],\n  [roofSegment, 16],\n  [chaosEmber, 6]\n]);\nexport const throneLodge = createResource(buildings, \"Throne Lodge\", [\n  [villa, 1],\n  [architecturalWall, 16],\n  [architecturalArches, 16],\n  [foundationSegment, 16],\n  [carpentryNail, 12],\n  [floorTiles, 16],\n  [roofSegment, 16],\n  [chaosEmber, 6]\n]);\nexport const keep = createResource(buildings, \"Keep\", [\n  [throneLodge, 1],\n  [architecturalWall, 12],\n  [architecturalArches, 20],\n  [foundationSegment, 20],\n  [carpentryNail, 14],\n  [floorTiles, 20],\n  [roofSegment, 2],\n  [chaosEmber, 10]\n]);\nexport const manor = createResource(buildings, \"Manor\", [\n  [villa, 1],\n  [architecturalWall, 16],\n  [architecturalArches, 16],\n  [foundationSegment, 16],\n  [carpentryNail, 12],\n  [floorTiles, 16],\n  [roofSegment, 16],\n  [chaosEmber, 4]\n]);\nexport const trainingCamp = createResource(buildings, \"Training Camp\", [\n  [foundationSegment, 4],\n  [carpentryNail, 4],\n  [etherealDust, 35],\n  [architecturalWall, 2],\n  [floorTiles, 4]\n]);\n//</editor-fold>\n\n//<editor-fold desc \"Crafting Stations>\nconst craftingStations = \"Crafting Stations\";\nexport const alchemyCraftingStation = createResource(\n  craftingStations,\n  \"Alchemy Crafting Station\",\n  [\n    [ore, 36],\n    [stone, 36],\n    [wood, 36],\n    [etherealDust, 15]\n  ]\n);\nexport const blacksmithingCraftingStation = createResource(\n  craftingStations,\n  \"Blacksmithing Crafting Station\",\n  [\n    [ore, 36],\n    [stone, 36],\n    [wood, 36],\n    [etherealDust, 15]\n  ]\n);\nexport const cookingCraftingStation = createResource(\n  craftingStations,\n  \"Cooking Crafting Station\",\n  [\n    [ore, 36],\n    [stone, 36],\n    [wood, 36],\n    [etherealDust, 15]\n  ]\n);\nexport const factoryCraftingStation = createResource(\n  craftingStations,\n  \"Factory Crafting Station\",\n  [\n    [ore, 36],\n    [stone, 36],\n    [wood, 36],\n    [etherealDust, 15]\n  ]\n);\nexport const generalCraftingStation = createResource(\n  craftingStations,\n  \"General Crafting Station\",\n  [\n    [ore, 36],\n    [stone, 36],\n    [wood, 36],\n    [etherealDust, 15]\n  ]\n);\nexport const jewelryCraftingStation = createResource(\n  craftingStations,\n  \"Jewelry Crafting Station\",\n  [\n    [ore, 36],\n    [stone, 36],\n    [wood, 36],\n    [etherealDust, 15]\n  ]\n);\nexport const leatherworkingCraftingStation = createResource(\n  craftingStations,\n  \"Leatherworking Crafting Station\",\n  [\n    [ore, 36],\n    [stone, 36],\n    [wood, 36],\n    [etherealDust, 15]\n  ]\n);\nexport const necromancyCraftingStation = createResource(\n  craftingStations,\n  \"Necromancy Crafting Station\",\n  [\n    [ore, 36],\n    [stone, 36],\n    [wood, 36],\n    [etherealDust, 15]\n  ]\n);\nexport const runemakingCraftingStation = createResource(\n  craftingStations,\n  \"Runemaking Crafting Station\",\n  [\n    [ore, 36],\n    [stone, 36],\n    [wood, 36],\n    [etherealDust, 15]\n  ]\n);\nexport const stonemasonryCraftingStation = createResource(\n  craftingStations,\n  \"Stonemasonry Crafting Station\",\n  [\n    [ore, 36],\n    [stone, 36],\n    [wood, 36],\n    [etherealDust, 15]\n  ]\n);\nexport const woodworkingCraftingStation = createResource(\n  craftingStations,\n  \"Woodworking Crafting Station\",\n  [\n    [ore, 36],\n    [stone, 36],\n    [wood, 36],\n    [etherealDust, 15]\n  ]\n);\n//</editor-fold>\n\n//<editor-fold desc \"Geomancy\">\nconst geomancy = \"Geomancy\";\nexport const grasslandParcel = createResource(geomancy, \"Grassland Parcel\", [\n  [soil, 10]\n]);\nexport const woodlandGroveParcel = createResource(\n  geomancy,\n  \"Woodland Grove Parcel\",\n  [\n    [grasslandParcel, 3],\n    [gold, 5_000]\n  ]\n);\nexport const homesteadParcel = createResource(geomancy, \"Homestead Parcel\", [\n  [grasslandParcel, 3],\n  [gold, 5_000]\n]);\nexport const woodlandHillsParcel = createResource(\n  geomancy,\n  \"Woodland Hills Parcel\",\n  [\n    [homesteadParcel, 1],\n    [woodlandGroveParcel, 1],\n    [soil, 1],\n    [gold, 10_000]\n  ]\n);\nexport const estateParcel = createResource(geomancy, \"Estate Parcel\", [\n  [woodlandHillsParcel, 1],\n  [woodlandGroveParcel, 1],\n  [soil, 1],\n  [gold, 15_000]\n]);\nexport const woodlandCreekParcel = createResource(\n  geomancy,\n  \"Woodland Creek Parcel\",\n  [\n    [estateParcel, 1],\n    [woodlandGroveParcel, 1],\n    [soil, 2],\n    [gold, 20_000]\n  ]\n);\nexport const hamletParcel = createResource(geomancy, \"Hamlet Parcel\", [\n  [estateParcel, 1],\n  [woodlandHillsParcel, 1],\n  [soil, 2],\n  [gold, 25_000]\n]);\nexport const shireParcel = createResource(geomancy, \"Shire Parcel\", [\n  [hamletParcel, 2],\n  [soil, 2],\n  [gold, 30_000]\n]);\nexport const villageParcel = createResource(geomancy, \"Village Parcel\", [\n  [shireParcel, 1],\n  [hamletParcel, 1],\n  [soil, 3],\n  [gold, 35_000]\n]);\nexport const townParcel = createResource(geomancy, \"Town Parcel\", [\n  [villageParcel, 1],\n  [hamletParcel, 1],\n  [soil, 3],\n  [gold, 40_000]\n]);\nexport const fiefParcel = createResource(geomancy, \"Fief Parcel\", [\n  [townParcel, 1],\n  [shireParcel, 1],\n  [soil, 3],\n  [gold, 45_000]\n]);\nexport const cityParcel = createResource(geomancy, \"City Parcel\", [\n  [fiefParcel, 2],\n  [soil, 2],\n  [gold, 50_000]\n]);\nexport const capitalParcel = createResource(geomancy, \"Capital Parcel\", [\n  [cityParcel, 2],\n  [soil, 4],\n  [gold, 55_000]\n]);\nexport const calderaParcel = createResource(geomancy, \"Caldera Parcel\", [\n  [capitalParcel, 3],\n  [gold, 60_000]\n]);\nexport const mountainCitadelParcel = createResource(\n  geomancy,\n  \"Mountain Citadel Parcel\",\n  [\n    [capitalParcel, 3],\n    [gold, 60_000]\n  ]\n);\n\n//</editor-fold>\n//<editor-fold desc \"Vendors and Stalls\">\nconst vendorStalls = \"Vendor Stalls\";\n//export const  alchemyStall = createResource(vendorStalls,\"Alchemy Stall\",[[ambrosiaSolution,1],[foundationSegment,1],[architecturalArches,1],[wood, 15],[frame,2],[etherealDust,10]]);\nexport const generalStall = createResource(vendorStalls, \"General Stall\", [\n  [architecturalArches, 1],\n  [foundationSegment, 1],\n  [wood, 15],\n  [frame, 2],\n  [etherealDust, 10]\n]);\nexport const jewelryStall = createResource(vendorStalls, \"Jewelry Stall\", [\n  [architecturalArches, 1],\n  [foundationSegment, 1],\n  [wood, 15],\n  [frame, 2],\n  [etherealDust, 10]\n]);\nexport const leatherArmorStall = createResource(\n  vendorStalls,\n  \"Leather Armor Stall\",\n  [\n    [architecturalArches, 1],\n    [foundationSegment, 1],\n    [wood, 15],\n    [frame, 2],\n    [etherealDust, 10]\n  ]\n);\nexport const mailArmorStall = createResource(vendorStalls, \"Mail Armor Stall\", [\n  [architecturalArches, 1],\n  [foundationSegment, 1],\n  [wood, 15],\n  [frame, 2],\n  [etherealDust, 10]\n]);\nexport const plateArmorStall = createResource(\n  vendorStalls,\n  \"Plate Armor Stall\",\n  [\n    [architecturalArches, 1],\n    [foundationSegment, 1],\n    [wood, 15],\n    [frame, 2],\n    [etherealDust, 10]\n  ]\n);\nexport const meleeStall = createResource(vendorStalls, \"Melee Stall\", [\n  [architecturalArches, 1],\n  [foundationSegment, 1],\n  [wood, 15],\n  [frame, 2],\n  [etherealDust, 10]\n]);\nexport const rangeStall = createResource(vendorStalls, \"Range Stall\", [\n  [architecturalArches, 1],\n  [foundationSegment, 1],\n  [wood, 15],\n  [frame, 2],\n  [etherealDust, 10]\n]);\nexport const necromancyStall = createResource(\n  vendorStalls,\n  \"Necromancy Stall\",\n  [\n    [architecturalArches, 1],\n    [foundationSegment, 1],\n    [wood, 15],\n    [frame, 2],\n    [etherealDust, 10]\n  ]\n);\nexport const runeStall = createResource(vendorStalls, \"Rune Stall\", [\n  [architecturalArches, 1],\n  [foundationSegment, 1],\n  [wood, 15],\n  [frame, 2],\n  [etherealDust, 10]\n]);\nexport const stoneMasonStall = createResource(\n  vendorStalls,\n  \"Stonemason Stall\",\n  [\n    [brick, 2],\n    [architecturalArches, 1],\n    [foundationSegment, 1],\n    [wood, 15],\n    [frame, 2],\n    [etherealDust, 10]\n  ]\n);\n//</editor-fold>\n","import {Resource} from \"../../resources/resources\";\n\nexport function getCraftingSteps(resource: Resource, amount: number = 1) {\n  const map: Map<Resource, number> = new Map();\n  if (resource.ingredients) {\n    for (const [\n      ingredient,\n      ingredientAmount\n    ] of resource.ingredients.entries()) {\n      map.set(\n        ingredient,\n        ((map.get(ingredient) || 0) + ingredientAmount) * amount\n      );\n      for (const [subIngredient, subAmount] of getCraftingSteps(\n        ingredient,\n        amount\n      ).entries()) {\n        map.set(\n          subIngredient,\n          ((map.get(subIngredient) || 0) + subAmount) * ingredientAmount\n        );\n      }\n    }\n  }\n  return map;\n}\n","import {Heading, Table, Td, Text, Th, Thead, Tr} from \"@chakra-ui/react\";\nimport {FC} from \"react\";\nimport {Resource} from \"../../resources/resources\";\nimport {getCraftingSteps} from \"../utils/craftingUtils\";\n\nconst CraftingRequirements: FC<{\n  resource: Resource;\n  amount: number;\n}> = ({resource, amount}) => {\n  const steps = getCraftingSteps(resource, amount);\n  return (\n    <section>\n      <Heading as=\"h2\" size=\"xl\">\n        Crafting Requirements\n      </Heading>\n      <Text size=\"lg\">\n        {resource.name} - {amount}\n      </Text>\n      <Table>\n        <Thead>\n          <Tr>\n            <Th>Item</Th>\n            <Th>Amount</Th>\n          </Tr>\n        </Thead>\n        <tbody>\n          {Array.from(steps.entries())\n            .sort(([, amountA], [, amountB]) => amountB - amountA)\n            .map(([resource, amount]) => (\n              <Tr key={resource.name}>\n                <Td>{resource.name}</Td>\n                <Td isNumeric>{amount.toLocaleString()}</Td>\n              </Tr>\n            ))}\n        </tbody>\n      </Table>\n    </section>\n  );\n};\n\nexport default CraftingRequirements;\n","import {\n  NumberInput,\n  NumberInputField,\n  Td,\n  Tr,\n  NumberInputProps\n} from \"@chakra-ui/react\";\nimport {FC} from \"react\";\nimport {Resource} from \"../../resources/resources\";\n\nconst ResourceNumberInput: FC<NumberInputProps> = (props) => (\n  <NumberInput maxW={48} min={0} {...props}>\n    <NumberInputField paddingInlineEnd={4} textAlign=\"right\" />\n  </NumberInput>\n);\n\nconst ResourceRow: FC<Resource> = ({name /*, ingredients*/}) => {\n  // const ingredientsArray = ingredients && Array.from(ingredients, ([ingredient, amount]) => ({ingredient, amount}))\n  return (\n    <Tr>\n      <Td>{name}</Td>\n      <Td>\n        <ResourceNumberInput />\n      </Td>\n      <Td>\n        <ResourceNumberInput />\n      </Td>\n      <Td>\n        <ResourceNumberInput isDisabled />\n      </Td>\n      <Td>\n        {/*{ingredientsArray && <table>*/}\n        {/*    <tbody>*/}\n        {/*    {ingredientsArray.map(({ingredient, amount}) =>*/}\n        {/*        <>*/}\n        {/*            <tr>*/}\n        {/*                <td>*/}\n        {/*                    {ingredient.name}*/}\n        {/*                </td>*/}\n        {/*                <td>*/}\n        {/*                    {amount}*/}\n        {/*                </td>*/}\n\n        {/*            </tr>*/}\n        {/*            {ingredient.ingredients && <ResourceRow {...ingredient}/>}*/}\n        {/*        </>*/}\n        {/*    )}*/}\n        {/*    </tbody>*/}\n        {/*</table>}*/}\n      </Td>\n    </Tr>\n  );\n};\n\nexport default ResourceRow;\n","import {Heading, Table, Tbody, Th, Tr} from \"@chakra-ui/react\";\nimport {FC, Fragment} from \"react\";\nimport {Resource, resources} from \"../../resources/resources\";\nimport ResourceRow from \"./ResourceRow\";\n\nconst ResourceTable: FC = () => {\n  const resourcesByGroup = resources.reduce((map, resource) => {\n    map[resource.group] = map[resource.group] || [];\n    map[resource.group].push(resource);\n    return map;\n  }, {} as Record<string, Resource[]>);\n  return (\n    <section>\n      <Heading as=\"h2\" size=\"xl\">\n        Items\n      </Heading>\n      <Table size=\"sm\">\n        <Tbody>\n          {Object.entries(resourcesByGroup).map(([group, groupResources]) => (\n            <Fragment key={group}>\n              <Tr>\n                <Th colSpan={5} fontSize=\"xl\" paddingY={4}>\n                  {group}\n                </Th>\n              </Tr>\n              <Tr>\n                <Th fontSize=\"lg\" paddingY={2}>\n                  Item\n                </Th>\n                <Th fontSize=\"lg\" paddingY={2}>\n                  Have\n                </Th>\n                <Th fontSize=\"lg\" paddingY={2}>\n                  Want\n                </Th>\n                <Th fontSize=\"lg\" paddingY={2}>\n                  Need\n                </Th>\n                <Th fontSize=\"lg\" paddingY={2}>\n                  Ingredients\n                </Th>\n              </Tr>\n              {groupResources.map((resource) => (\n                <ResourceRow key={resource.name} {...resource} />\n              ))}\n            </Fragment>\n          ))}\n        </Tbody>\n      </Table>\n    </section>\n  );\n};\n\nexport default ResourceTable;\n","import {Heading} from \"@chakra-ui/react\";\nimport {FC} from \"react\";\nimport {woodlandHillsParcel} from \"../resources/resources\";\nimport CraftingRequirements from \"./components/CraftingRequirements\";\nimport ResourceTable from \"./components/ResourceTable\";\n\nconst CraftingCalculator: FC = () => (\n  <>\n    <Heading as=\"h1\" size=\"2xl\">\n      Crowfall Crafting Calc\n    </Heading>\n    <CraftingRequirements resource={woodlandHillsParcel} amount={5} />\n    <ResourceTable />\n  </>\n);\n\nexport default CraftingCalculator;\n","import {extendTheme, ThemeConfig} from \"@chakra-ui/react\";\n\nconst config: ThemeConfig = {\n  initialColorMode: \"dark\",\n  useSystemColorMode: true\n};\n\nconst theme = extendTheme({config});\n\nexport default theme;\n","import {Box, ChakraProvider, Grid, VStack} from \"@chakra-ui/react\";\nimport {FC} from \"react\";\nimport {ColorModeSwitcher} from \"./ColorModeSwitcher\";\nimport CraftingCalculator from \"./CraftingCalculator/CraftingCalculator\";\nimport theme from \"./theme\";\n\nconst App: FC = () => (\n  <ChakraProvider theme={theme}>\n    <Box textAlign=\"center\" fontSize=\"xl\">\n      <Grid minH=\"100vh\" p={3}>\n        <ColorModeSwitcher justifySelf=\"flex-end\" />\n        <VStack spacing={8}>\n          <CraftingCalculator />\n        </VStack>\n      </Grid>\n    </Box>\n  </ChakraProvider>\n);\n\nexport default App;\n","import {ReportHandler} from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It is the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: {\"Service-Worker\": \"script\"}\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import {ColorModeScript} from \"@chakra-ui/react\";\nimport {StrictMode} from \"react\";\nimport {render} from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport theme from \"./theme\";\n\nrender(\n  <StrictMode>\n    <ColorModeScript initialColorMode={theme.config.initialColorMode} />\n    <App />\n  </StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}